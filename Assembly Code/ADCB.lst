       1                                ;Test for ADCB(Ming), add the content of the C-bit into the destination(high byte or low byte).
       2 000000 000070                  A: .WORD 000070
       3 000002 000400                  B: .WORD 000400
       4 000004 002001                  C: .WORD 002001
       5 000006 003002                  D: .WORD 003002
       6                                
       7 000010 016701  177764          START: MOV A, R1 ;R1 = 000070
       8 000014 105501                         ADCB R1 ;R1 = 000070 assume previous C-bit is 0
       9 000016 016701  177756                 MOV A, R1
      10 000022 105511                         ADCB (R1)
      11 000024 105521                         ADCB (R1)+ ;R1 = 000071
      12 000026 016701  177746          	   MOV A, R1 ;R1 = 000070
      13 000032 105531                         ADCB @(R1)+ ;R1 = 000072
      14 000034 016703  177744          	   MOV C, R3
      15 000040 105543                         ADCB -(R3) ;R3 = 002000
      16 000042 105553                         ADCB @-(R3) ; R3 = 001776
      17 000044 105561  000006                 ADCB 6(R1)
      18 000050 105571  000006                 ADCB @6(R1)
      19                                       
      20 000054 105527  000050                 ADCB #000050 ;000050(not sure) assume previous C-bit is 0
      21 000060 105537  000100                 ADCB @#100
      22 000064 105567  177710                 ADCB A ;Relative: A = 000070(not sure)
      23 000070 105577  177706                 ADCB @B ;Relative deferred: add C-bit to the content(lowest byte(7:0)) of address 000400
      24 000074 000000                  	   HALT
      25                                
      25                                .END START
